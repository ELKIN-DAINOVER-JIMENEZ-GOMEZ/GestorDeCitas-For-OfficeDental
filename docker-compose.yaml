services:
  # Base de datos MySQL
  mysql-db:
    image: mysql:8.0
    container_name: mysql-consultorio
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_USER_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - consultorio-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
      interval: 10s

  # Aplicaci√≥n Spring Boot
  backend-app:
    build: 
      context: ${BACKEND_PATH}
      dockerfile: Dockerfile
    container_name: backend-consultorio
    mem_limit: ${BACKEND_MEMORY}
    restart: unless-stopped
    ports:
      - "${API_PORT}:8080"
    environment:
      BD_URL: jdbc:mysql://mysql-db:3306/${DB_NAME}?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      BD_USER_NAME: root
      PASSWORD: ${DB_ROOT_PASSWORD}
      BD_DRIVER: ${BD_DRIVER}
      KEY_SECRETS: ${JWT_SECRET}
      EXPIRATIONS: ${JWT_EXPIRATION}
      HIBERNATE_DIALECT: ${HIBERNATE_DIALECT}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILE}
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - consultorio-network
    volumes:
      - app_logs:/app/logs

  # Frontend React/Vite
  frontend-app:
    build: 
      context: ${FRONTEND_PATH}
      dockerfile: Dockerfile
    container_name: frontend-consultorio
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT}:5173"
    environment:
      NODE_ENV: ${NODE_ENV}
      VITE_API_URL: ${VITE_API_URL}
    depends_on:
      - backend-app
    networks:
      - consultorio-network
    volumes:
      - ${FRONTEND_PATH}:/app
      - /app/node_modules
    stdin_open: true
    tty: true

volumes:
  mysql_data:
    driver: local
  app_logs:
    driver: local

networks:
  consultorio-network:
    driver: bridge